一、线性表

1、顺序存储结构：
逻辑上相邻的元素在物理上也相邻的存储元素中（连续的存储空间）依次存储地址连续
随机存取
#define MAXSIZE 1000

typedef struct{
char no[20];
char name [50];
float price [];
}BOOK;

typedef struct{
BOOK*elem;
int length;
}SqList;


2、链式存储结构：
数据元素（节点）在存储器中位置是任意的，逻辑上相邻的元素物理上存储位置可能不相邻。
节点[数据][指针]
链表：n个节点由指针链组成的链表。顺序存取。
单链表：每个节点有一个指针域
双链表：每个节点有两个指针域
循环链表：链表节点首位相连

typedef struct Lnode{
    ElemType      date;
    struct  Lnode *next;
}Lnode *LinKList;
定义链表：LinkList L；  
定义指针：LNode*p

二、栈和队列
栈和队列是线性表的子集（是插入和删除位置受限的线性表）
线性表：插入  1<=i<=n+1  删除  1<=i<=n
栈：（后进先出）
插入  n+1   删除   n
队列： （先进先出）    插入   n+1    删除 

1、栈
特殊的线性表，限定仅在一端（通常表尾）
后进先出（LIFO）
表尾：栈顶Top； 表头：栈底Base；
例 ：栈 s=（a1,a2,a3......an-1,an）  a1栈底   an为栈顶
插入 ：入栈     删除  ：出栈
逻辑结构：一对一  存储结构：顺序表、链表  运算规则：后进先出

（1）顺序栈


2、队列
只能在表的一端进行插入另一端进行删除（头删尾插）
逻辑结构：一对一 存储结构：顺序队、链队  运算规则：先进先出（FIFO）

